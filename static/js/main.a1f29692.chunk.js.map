{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["quotes","text","author","picture","rand","Math","floor","random","length","App","props","state","order","handleClick","bind","this","setState","id","className","transitionName","transitionEnterTimeout","transitionLeaveTimeout","key","src","alt","onClick","data-toggle","title","target","rel","href","class","style","fontSize","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oTAIMA,G,MAAS,CACb,CAAEC,KAAM,mEAAoEC,OAAQ,cAAeC,QAAS,0BAC5G,CAAEF,KAAM,8DAA+DC,OAAQ,oBAAqBC,QAAS,0BAC7G,CAAEF,KAAM,wDAAoDC,OAAQ,mBAAoBC,QAAS,0BACjG,CAAEF,KAAM,mFAAoFC,OAAQ,wBAAyBC,QAAS,0BACtI,CAAEF,KAAM,0FAAsFC,OAAQ,iBAAkBC,QAAS,0BACjI,CAAEF,KAAM,8EAAgEC,OAAQ,wBAAoBC,QAAS,0BAC7G,CAAEF,KAAM,uIAAmIC,OAAQ,cAAeC,QAAS,0BAC3K,CAAEF,KAAM,qHAAsHC,OAAQ,eAAgBC,QAAS,0BAC/J,CAAEF,KAAM,iDAA6CC,OAAQ,uBAAwBC,QAAS,0BAC9F,CAAEF,KAAM,+JAAgKC,OAAQ,aAAcC,QAAS,4BAGrMC,EAAOC,KAAKC,MAAMD,KAAKE,SAAWP,EAAOQ,QAoE9BC,E,YAjEb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXX,SACAY,MAAOR,EACPH,KAAMD,EAAOI,GAAMH,KACnBC,OAAQF,EAAOI,GAAMF,OACrBC,QAASH,EAAOI,GAAMD,SAExB,EAAKU,YAAc,EAAKA,YAAYC,KAAjB,gBATF,E,2EAWJ,IAAD,OACRC,KAAKJ,MAAMC,QAAUG,KAAKJ,MAAMX,OAAOQ,OAAS,EAClDO,KAAKC,SAAS,CACZJ,MAAO,IACN,kBAAM,EAAKI,SAAS,CACrBf,KAAM,EAAKU,MAAMX,OAAO,EAAKW,MAAMC,OAAOX,KAC1CC,OAAQ,EAAKS,MAAMX,OAAO,EAAKW,MAAMC,OAAOV,OAC5CC,QAAS,EAAKQ,MAAMX,OAAO,EAAKW,MAAMC,OAAOT,aAI/CY,KAAKC,SAAS,CACZJ,MAAOG,KAAKJ,MAAMC,MAAQ,IACzB,kBAAM,EAAKI,SAAS,CACrBf,KAAM,EAAKU,MAAMX,OAAO,EAAKW,MAAMC,OAAOX,KAC1CC,OAAQ,EAAKS,MAAMX,OAAO,EAAKW,MAAMC,OAAOV,OAC5CC,QAAS,EAAKQ,MAAMX,OAAO,EAAKW,MAAMC,OAAOT,e,+BAKjD,OACE,yBAAKc,GAAG,YAAYC,UAAU,0BAC5B,6DACA,qDACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACf,kBAAC,IAAD,CACIC,eAAe,WACfC,uBAAwB,IACxBC,uBAAwB,KACxB,yBAAKH,UAAU,eAAeI,IAAKP,KAAKJ,MAAMR,QAASoB,IAAKR,KAAKJ,MAAMR,QAASqB,IAAI,6CAGxF,yBAAKN,UAAU,OACb,uBAAGD,GAAG,OAAOC,UAAU,IAAIH,KAAKJ,MAAMV,OAExC,yBAAKiB,UAAU,OACb,wBAAID,GAAG,UAAUF,KAAKJ,MAAMT,SAE9B,yBAAKgB,UAAU,OACb,yBAAKA,UAAU,OACb,4BAAQD,GAAG,YAAYC,UAAU,iBAAiBO,QAASV,KAAKF,aAAhE,cAEF,yBAAKK,UAAU,OACb,uBAAGD,GAAG,cAAcS,cAAY,UAAUC,MAAM,oBAAoBC,OAAO,SAASC,IAAI,sBAAsBC,KAAM,yCAA2Cf,KAAKJ,MAAMV,MAAM,uBAAG8B,MAAM,gBAAgBC,MAAO,CAAEC,SAAU,e,GAzDxNC,IAAMC,WCPJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.a1f29692.chunk.js","sourcesContent":["import React from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport './App.css';\n\nconst quotes = [\n  { text: \"It does not matter how slowly you go as long as you do not stop.\", author: \"- Confucius\", picture: \"https://bit.ly/2MZBMFX\" },\n  { text: \"A person who never made a mistake never tried anything new.\", author: \"- Albert Einstein\", picture: \"https://bit.ly/34gD1q6\" },\n  { text: \"Winning isn’t everything, but wanting to win is.\", author: \"- Vince Lombardi\", picture: \"https://bit.ly/34enlDv\"},\n  { text: \"Go confidently in the direction of your dreams. Live the life you have imagined.\", author: \"- Henry David Thoreau\", picture: \"https://bit.ly/2BUWZKH\"},\n  { text: \"The most common way people give up their power is by thinking they don’t have any.\", author: \"- Alice Walker\", picture: \"https://bit.ly/34a15uy\" },\n  { text: \"Nothing is impossible, the word itself says, “I’m possible!”\", author: \"– Audrey Hepburn\", picture: \"https://bit.ly/2NuAtxN\" },\n  { text: \"What’s money? A man is a success if he gets up in the morning and goes to bed at night and in between does what he wants to do.\", author: \"- Bob Dylan\", picture: \"https://bit.ly/331PIoj\" },\n  { text: \"When everything seems to be going against you, remember that the airplane takes off against the wind, not with it.\", author: \"- Henry Ford\", picture: \"https://bit.ly/2JCBYsF\" },\n  { text: \"Believe you can and you’re halfway there.\", author: \"- Theodore Roosevelt\", picture: \"https://bit.ly/2C9aV49\" },\n  { text: \"That person who helps others simply because it should or must be done, and because it is the right thing to do, is indeed without a doubt, a real superhero.\", author: \"- Stan Lee\", picture: \"https://bit.ly/2NpWeie\"}\n];\n\nlet rand = Math.floor(Math.random() * quotes.length);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes,\n      order: rand,\n      text: quotes[rand].text,\n      author: quotes[rand].author,\n      picture: quotes[rand].picture\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    if (this.state.order === this.state.quotes.length - 1) {\n      this.setState({\n        order: 0\n      }, () => this.setState({\n        text: this.state.quotes[this.state.order].text,\n        author: this.state.quotes[this.state.order].author,\n        picture: this.state.quotes[this.state.order].picture\n      }));\n    }\n    else {\n      this.setState({\n        order: this.state.order + 1\n      }, () => this.setState({\n        text: this.state.quotes[this.state.order].text,\n        author: this.state.quotes[this.state.order].author,\n        picture: this.state.quotes[this.state.order].picture\n      }));\n    }\n  }\n  render() {\n    return (\n      <div id=\"quote-box\" className=\"container-fluid App el\">\n        <h1>Welcome to the Quote Machine!</h1>\n        <h5>Made By Daniel Mimoun</h5>\n        <div className=\"row App-header\">\n          <div className=\"col\">\n          <ReactCSSTransitionGroup\n              transitionName=\"carousel\"\n              transitionEnterTimeout={300}\n              transitionLeaveTimeout={300}>\n              <img className=\"picture-size\" key={this.state.picture} src={this.state.picture} alt=\"Imagine this is the the person please!\"/>\n            </ReactCSSTransitionGroup>\n          </div>\n          <div className=\"col\">\n            <p id=\"text\" className=\"\">{this.state.text}</p>\n          </div>\n          <div className=\"col\">\n            <h6 id=\"author\">{this.state.author}</h6>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <button id=\"new-quote\" className=\"btn btn-danger\" onClick={this.handleClick}>New Quote</button>\n            </div>\n            <div className=\"col\">\n              <a id=\"tweet-quote\" data-toggle=\"tooltip\" title=\"Tweet this quote!\" target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://twitter.com/intent/tweet?text=\" + this.state.text}><i class=\"fa fa-twitter\" style={{ fontSize: 24 }}></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}