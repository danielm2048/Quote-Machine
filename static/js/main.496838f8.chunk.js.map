{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["rand","Math","floor","random","Pic","props","transitionName","transitionEnterTimeout","transitionLeaveTimeout","className","key","picture","src","alt","App","state","loading","quotes","checkedQuotes","order","text","author","handleClick","bind","handleDropDownChange","this","length","setState","type","map","quote","isChecked","temp","reduce","filtered","push","axios","get","data","q","arr","document","getElementsByClassName","ch","checked","getElementById","addEventListener","e","stopPropagation","target","id","filter","i","name","onClick","data-toggle","data-flip","aria-haspopup","aria-expanded","htmlFor","title","rel","href","style","fontSize","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.496838f8.chunk.js","sourcesContent":["import React from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport './App.css';\nimport axios from 'axios';\n\n/*const quotes = [\n  { text: \"It does not matter how slowly you go as long as you do not stop.\", author: \"- Confucius\", picture: \"https://bit.ly/2MZBMFX\", type: \"Motivation\" },\n  { text: \"A person who never made a mistake never tried anything new.\", author: \"- Albert Einstein\", picture: \"https://bit.ly/34gD1q6\", type: \"Life\" },\n  { text: \"Winning isn’t everything, but wanting to win is.\", author: \"- Vince Lombardi\", picture: \"https://bit.ly/34enlDv\", type: \"Motivation\" },\n  { text: \"Go confidently in the direction of your dreams. Live the life you have imagined.\", author: \"- Henry David Thoreau\", picture: \"https://bit.ly/2BUWZKH\", type: \"Life\" },\n  { text: \"The most common way people give up their power is by thinking they don’t have any.\", author: \"- Alice Walker\", picture: \"https://bit.ly/34a15uy\", type: \"Life\" },\n  { text: \"Nothing is impossible, the word itself says, “I’m possible!”\", author: \"– Audrey Hepburn\", picture: \"https://bit.ly/2NuAtxN\", type: \"Motivation\" },\n  { text: \"What’s money? A man is a success if he gets up in the morning and goes to bed at night and in between does what he wants to do.\", author: \"- Bob Dylan\", picture: \"https://bit.ly/331PIoj\", type: \"Life\" },\n  { text: \"When everything seems to be going against you, remember that the airplane takes off against the wind, not with it.\", author: \"- Henry Ford\", picture: \"https://bit.ly/2JCBYsF\", type: \"Motivation\" },\n  { text: \"Believe you can and you’re halfway there.\", author: \"- Theodore Roosevelt\", picture: \"https://bit.ly/2C9aV49\", type: \"Motivation\" },\n  { text: \"That person who helps others simply because it should or must be done, and because it is the right thing to do, is indeed without a doubt, a real superhero.\", author: \"- Stan Lee\", picture: \"https://bit.ly/2NpWeie\", type: \"Friends\" }\n];*/\n\nlet rand = Math.floor(Math.random() * 10);\n\nconst Pic = (props) => {\n  return (\n    <ReactCSSTransitionGroup\n      transitionName=\"fade\"\n      transitionEnterTimeout={300}\n      transitionLeaveTimeout={300}>\n      <img className=\"picture-size\" key={props.picture} src={props.picture} alt=\"Imagine this is the person please!\" />\n    </ReactCSSTransitionGroup>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      quotes: [],\n      checkedQuotes: [],\n      order: rand,\n      text: \"\",\n      author: \"\",\n      picture: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleDropDownChange = this.handleDropDownChange.bind(this);\n  }\n  handleClick() {\n    if (this.state.checkedQuotes.length === 0) {\n      this.setState({\n        text: \"No quotes to show!!\",\n        author: \"\",\n        picture: \"\"\n      });\n    }\n    else {\n      if (this.state.order === this.state.checkedQuotes.length - 1 || this.state.checkedQuotes.length === 1) {\n        this.setState({\n          order: 0\n        }, () => this.setState({\n          text: this.state.checkedQuotes[this.state.order].text,\n          author: this.state.checkedQuotes[this.state.order].author,\n          picture: this.state.checkedQuotes[this.state.order].picture\n        }));\n      }\n      else {\n        this.setState({\n          order: this.state.order + 1\n        }, () => this.setState({\n          text: this.state.checkedQuotes[this.state.order].text,\n          author: this.state.checkedQuotes[this.state.order].author,\n          picture: this.state.checkedQuotes[this.state.order].picture\n        }));\n      }\n    }\n  }\n  handleDropDownChange(type) {\n    switch (type) {\n      case \"AllT\":\n        this.state.quotes.map(quote => quote.isChecked = true);\n        this.setState({ checkedQuotes: this.state.quotes });\n        break;\n      case \"AllF\":\n        this.state.quotes.map(quote => quote.isChecked = false);\n        this.setState({ checkedQuotes: [] });\n        break;\n      default:\n        let temp = this.state.quotes.reduce((filtered, quote) => {\n          if (quote.type === type) {\n            quote.isChecked = !quote.isChecked;\n          }\n          if (quote.isChecked) filtered.push(quote);\n          return filtered;\n        }, []);\n        this.setState({ checkedQuotes: temp });\n        break;\n    }\n  }\n  async componentDidMount() {\n    const { data } = await axios.get('https://gentle-beyond-48579.herokuapp.com/quotes/api');\n    data.map(q => q.isChecked = true);\n    this.setState({\n      quotes: data,\n      checkedQuotes: data\n    }, () => this.setState({\n      text: this.state.checkedQuotes[rand].text,\n      author: this.state.checkedQuotes[rand].author,\n      picture: this.state.checkedQuotes[rand].picture\n    }));\n    if (this.state.checkedQuotes !== []) this.setState({ loading: false });\n    let arr = [...document.getElementsByClassName(\"check\")];\n    arr.map(ch => ch.checked = true);\n    document.getElementById(\"menu\").addEventListener(\"click\", (e) => {\n      e.stopPropagation();\n    }, false);\n    document.getElementById(\"menu\").addEventListener(\"change\", (e) => {\n      if (e.target.checked && e.target.id === \"all\") {\n        arr.map(ch => ch.checked = true);\n        this.handleDropDownChange(\"AllT\");\n      }\n      else if (!e.target.checked && e.target.id === \"all\") {\n        arr.map(ch => ch.checked = false);\n        this.handleDropDownChange(\"AllF\");\n      }\n      else if (e.target.id !== \"all\") {\n        if (arr.filter((ch, i) => (i > 0 && ch.checked === true)).length === arr.length - 1) {\n          arr[0].checked = true;\n        }\n        if (!e.target.checked) arr[0].checked = false;\n        this.handleDropDownChange(e.target.name);\n      }\n    }, false);\n  }\n  render() {\n    return (\n      <div id=\"quote-box\" className=\"container-fluid App\">\n        <div className=\"row App-header\">\n          <h1>Welcome to the Quote Machine!</h1>\n          <br />\n          <div className=\"row\">\n            <div className=\"btn-group cont\">\n              <button type=\"button\" id=\"newQuote\" className=\"btn btn-danger\" onClick={this.handleClick}>Get A New Quote!</button>\n              <button type=\"button\" className=\"btn btn-danger dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" data-flip=\"false\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                <span className=\"sr-only\">Toggle Dropdown</span>\n              </button>\n              <div id=\"menu\" className=\"dropdown-menu\">\n                <label htmlFor=\"all\" className=\"dropdown-item\"><input id=\"all\" type=\"checkbox\" className=\"check\" name=\"All\" /> All </label>\n                <label htmlFor=\"romance\" className=\"dropdown-item\"><input id=\"romance\" type=\"checkbox\" className=\"check\" name=\"Romance\" /> Romance </label>\n                <label htmlFor=\"motivation\" className=\"dropdown-item\"><input id=\"motivation\" type=\"checkbox\" className=\"check\" name=\"Motivation\" /> Motivation </label>\n                <label htmlFor=\"friends\" className=\"dropdown-item\"><input id=\"friends\" type=\"checkbox\" className=\"check\" name=\"Friends\" /> Friends </label>\n                <label htmlFor=\"life\" className=\"dropdown-item\"><input id=\"life\" type=\"checkbox\" className=\"check\" name=\"Life\" /> Life </label>\n              </div>\n            </div>\n          </div>\n          <br />\n          <div className=\"row\">\n            {\n              this.state.loading ? <div className=\"lds-ripple\"><div></div><div></div></div> : <Pic picture={this.state.picture} />\n            }\n          </div>\n          <br />\n          <div className=\"textBox\">\n            <p id=\"text\" className=\"\">{this.state.text}</p>\n            <h6 id=\"author\">{this.state.author}</h6>\n          </div>\n          <br />\n          <div className=\"row\">\n            <a id=\"tweet-quote\" data-toggle=\"tooltip\" title=\"Tweet this quote!\" target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://twitter.com/intent/tweet?text=\" + this.state.text + \" \" + this.state.author}><i className=\"fa fa-twitter\" style={{ fontSize: 24 }}></i></a>\n          </div>\n          <h6>Made With <i className=\"fa fa-heart\" style={{ fontSize: 18 }}></i> By Daniel Mimoun</h6>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}